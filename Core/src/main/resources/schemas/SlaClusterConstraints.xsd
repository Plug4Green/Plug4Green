<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns:opticon="f4g/schemas/java/constraints/OptimizerConstraints"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:f4g="f4g/schemas/java/MetaModel"
	xmlns:types="f4g/schemas/java/CommonTypes"
	targetNamespace="f4g/schemas/java/constraints/OptimizerConstraints"
	xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" jaxb:version="1.0">
	<xsd:import namespace="f4g/schemas/java/MetaModel"
		schemaLocation="MetaModel.xsd" />

	<!-- ****************** Constraints Root ************************ -->

	<xsd:element name="FIT4GreenOptimizerConstraint">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="VirtualMachines" type="opticon:VMFlavorType" />
				<xsd:element name="FIT4GreenFederation" minOccurs="0" type="opticon:FederationType" />
				<xsd:element name="FIT4GreenCluster" type="opticon:ClusterType" />
				<xsd:element name="FIT4GreenServerGroup" minOccurs="0" type="opticon:ServerGroupType" />
				<xsd:element name="ListOfSLA" type="opticon:SLAType" />
				<xsd:element name="ListOfPolicies" type="opticon:PolicyType" />
				<xsd:element name="ListOfPlacementConstraints" minOccurs="0" type="opticon:Constraint" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>

	<!-- ****************** VMFlavorType ************************ -->

	<xsd:complexType name="VMFlavorType">
		<xsd:sequence>
			<xsd:element name="VMFlavor" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<!-- Used to identify the appropriate virtual machine type: e.g. m1.small, 
							or m1.medium. This can be mapped to the "cloudVm" inside VirtualMachine 
							of meta-model -->
						<xsd:element name="name" type="xsd:string" minOccurs="1"
							maxOccurs="1" />
						<!--Used to identify the capacity in terms of CPU, memory, hard disk 
							of the corresponding VMtype. These values are predefined and well known in 
							advance -->
						<xsd:element name="capacity" type="opticon:capacityType"
							minOccurs="1" maxOccurs="1" />
						<!--Used to predict the expected loads in terms of CPU, memory, hard 
							disk of the corresponding VMtype. These values are specified based on some 
							statistical data -->
						<xsd:element name="expectedLoad" type="opticon:expectedLoad"
							minOccurs="1" maxOccurs="1" />
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<!-- Defining the Topology in the following -->
	<xsd:complexType name="expectedLoad">
		<xsd:sequence>
			<xsd:element name="vCpuLoad" type="f4g:CpuUsage"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="vRamUsage" type="f4g:MemoryUsage"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="vDiskLoad" type="f4g:IoRate"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="vNetworkLoad" type="f4g:NetworkUsage"
				minOccurs="1" maxOccurs="1" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="capacityType">
		<xsd:sequence>
			<xsd:element name="vCpus" type="f4g:NrOfCpus"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="vRam" type="f4g:RAMSize"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="vHardDisk" type="f4g:StorageCapacity"
				minOccurs="1" maxOccurs="1" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- ****************** Cluster ************************ -->

	<xsd:complexType name="ClusterType">
		<xsd:sequence>
			<xsd:element name="Cluster" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="Name" type="xsd:string" />
						<xsd:element name="NodeController" type="opticon:nodeController" />
						<xsd:element name="BoundedSLAs" type="opticon:boundedSLAsType" />
						<xsd:element name="BoundedPolicies" type="opticon:boundedPoliciesType">
						</xsd:element>
					</xsd:sequence>
					<xsd:attribute name="id" type="xsd:ID" use="required" />
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="boundedPoliciesType">
		<xsd:sequence>
			<xsd:element name="Policy" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="idref" type="xsd:IDREF" use="required">
						<xsd:annotation>
							<xsd:appinfo>
								<jaxb:property>
									<jaxb:baseType name="PolicyType.Policy" />
								</jaxb:property>
							</xsd:appinfo>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="boundedPlacementConstraint">
		<xsd:sequence>
			<xsd:element name="PlacementConstraint" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="idref" type="xsd:IDREF" use="required">
						<xsd:annotation>
							<xsd:appinfo>
								<jaxb:property>
									<jaxb:baseType name="Constraint.PlacementConstraint" />
								</jaxb:property>
							</xsd:appinfo>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<!--NodeController type containing references to nodes -->
	<xsd:complexType name="nodeController">
		<xsd:sequence>
			<xsd:element name="NodeName" type="xsd:string" maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="boundedSLAsType">
		<xsd:sequence>
			<xsd:element name="SLA" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="idref" type="xsd:IDREF" use="required">
						<xsd:annotation>
							<xsd:appinfo>
								<jaxb:property>
									<jaxb:baseType name="SLAType.SLA" />
								</jaxb:property>
							</xsd:appinfo>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="boundedClustersType">
		<xsd:sequence>
			<xsd:element name="Cluster" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="idref" type="xsd:IDREF" use="required">
						<xsd:annotation>
							<xsd:appinfo>
								<jaxb:property>
									<jaxb:baseType name="ClusterType.Cluster" />
								</jaxb:property>
							</xsd:appinfo>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<!-- ****************** Federation ************************ -->

	<xsd:complexType name="FederationType">
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string" />
			<xsd:element name="BoundedCluster" type="opticon:boundedClustersType" />
			<xsd:element name="BoundedPolicies" type="opticon:boundedPoliciesType"/>
		</xsd:sequence>
	</xsd:complexType>


	<!-- ****************** Server Group ************************ -->

	<xsd:complexType name="ServerGroupType">
		<xsd:sequence>
			<xsd:element name="ServerGroup" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="Name" type="xsd:string" />
						<xsd:element name="NodeController" type="opticon:nodeController" />
						<xsd:element name="BoundedSLAs" type="opticon:boundedSLAsType" />
						<xsd:element name="BoundedPlacementConstraints"
							type="opticon:boundedPlacementConstraint">
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<!-- ****************** SLA ************************ -->

	<xsd:complexType name="SLAType">
		<xsd:sequence>
			<xsd:element name="SLA" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="HardwareConstraints" type="opticon:HardwareConstraintsType" />
						<xsd:element name="QoSConstraints" type="opticon:QoSConstraintsType" />
						<xsd:element name="SecurityConstraints" type="opticon:SecurityConstraintsType" />
						<xsd:element name="EnergyConstraints" type="opticon:EnergyConstraintsType" />
					</xsd:sequence>
					<xsd:attribute name="id" type="xsd:ID" use="required" />
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<!--Hardware needs per SLA instance -->
	<xsd:complexType name="HardwareConstraintsType">
		<xsd:sequence>
			<xsd:element name="HDDCapacity" minOccurs="0">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:double">
							<xsd:attribute name="priority" type="xsd:int"
								default="1" />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="NbOfCores" minOccurs="0">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:int">
							<xsd:attribute name="priority" type="xsd:int"
								default="1" />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="CompPowerGHz" minOccurs="0">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:double">
							<xsd:attribute name="priority" type="xsd:int"
								default="1" />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="MemorySpaceGB" minOccurs="0">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:double">
							<xsd:attribute name="priority" type="xsd:int"
								default="1" />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="NbOfGPUCores" minOccurs="0">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:int">
							<xsd:attribute name="priority" type="xsd:int"
								default="1" />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="GPUFreqGHz" minOccurs="0">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:double">
							<xsd:attribute name="priority" type="xsd:int"
								default="1" />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="RAIDLevel" minOccurs="0">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:int">
							<xsd:attribute name="priority" type="xsd:int"
								default="1" />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<!--Common QoS Description -->
	<xsd:complexType name="QoSConstraintsType">
		<xsd:sequence>
			<xsd:element name="MaxServerCPULoad" minOccurs="0">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:double">
							<xsd:attribute name="priority" type="xsd:int"
								default="1" />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="MaxVirtualLoadPerCore" minOccurs="0">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:double">
							<xsd:attribute name="priority" type="xsd:int"
								default="1" />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="MaxVirtualCPUPerCore" minOccurs="0">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:float">
							<xsd:attribute name="priority" type="xsd:int"
								default="1" />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="MaxServerAvg_vCPUperCore" minOccurs="0">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:float">
							<xsd:attribute name="priority" type="xsd:int"
								default="1" />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="MaxServerAvg_vRAMperPhyRAM" minOccurs="0">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:float">
							<xsd:attribute name="priority" type="xsd:int"
								default="1" />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Max_vRAMperPhyRAM" minOccurs="0">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:float">
							<xsd:attribute name="priority" type="xsd:int"
								default="1" />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Bandwidth" minOccurs="0">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:double">
							<xsd:attribute name="priority" type="xsd:int"
								default="1" />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="MaxVMperServer" minOccurs="0">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:int">
							<xsd:attribute name="priority" type="xsd:int"
								default="1" />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<!--Security Constraints Description -->
	<xsd:complexType name="SecurityConstraintsType">
		<xsd:sequence>
			<xsd:element name="DedicatedServer" minOccurs="0">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:boolean">
							<xsd:attribute name="priority" type="xsd:int"
								default="1" />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="SecureAccessPossibility" minOccurs="0"> <!-- i.e. VPN access granted? -->
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:boolean">
							<xsd:attribute name="priority" type="xsd:int"
								default="1" />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>


	<!--Energy Constraints Description -->
	<xsd:complexType name="EnergyConstraintsType">
		<xsd:sequence>
			<!-- Maximum power a server can consume, in Watts-->
			<xsd:element name="MaxPowerServer" minOccurs="0"> 
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:int"> 
							<xsd:attribute name="priority" type="xsd:int"
								default="1" />
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>


	<!-- ****************** Policy ************************ -->

	<xsd:complexType name="PolicyType">
		<xsd:sequence>
			<xsd:element name="policy" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<!-- Dynamic load pattern regarding VMs slots threshold -->
						<xsd:element name="PeriodVMThreshold" type="opticon:Period"
							minOccurs="0" maxOccurs="unbounded" />

						<!-- Minimum amount of minutes between each VM move -->
						<xsd:element name="DelayBetweenMove" type="xsd:int"
							minOccurs="0" maxOccurs="1" />
						<!-- Minimum amount of minutes between each server On/Off -->
						<xsd:element name="DelayBetweenOnOff" type="xsd:int"
							minOccurs="0" maxOccurs="1" />
						<!-- A VM will be moved if: Psaved by move * VMMigrationPaybacktime > Energy spent for the move-->
						<xsd:element name="VMMigrationPaybacktime" type="xsd:int"
							minOccurs="0" maxOccurs="1" />
					</xsd:sequence>
					<xsd:attribute name="id" type="xsd:ID" use="required" />
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<!-- ****************** Load Pattern ********************* -->

	<xsd:simpleType name="Repeats">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="DAILY" />
			<xsd:enumeration value="WEEKLY" />
			<xsd:enumeration value="MONTHLY" />
			<xsd:enumeration value="YEARLY" />
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UnitType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="ABSOLUTE" />
			<xsd:enumeration value="RELATIVE" />
		</xsd:restriction>
	</xsd:simpleType>	

	<!-- number of CPUs that we need to keep free in the DC (absolute value in number of CPUs, relative value in percentage)-->
	<xsd:complexType name="spareCPUs">
		<xsd:simpleContent>
			<xsd:extension base="xsd:int">
				<xsd:attribute name="unitType" type="opticon:UnitType" default="ABSOLUTE" />
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>

	<!-- number of Nodes that we need to keep free in the DC (absolute value in number of CPUs, relative value in percentage)-->
	<xsd:complexType name="spareNodes">
		<xsd:simpleContent>
			<xsd:extension base="xsd:int">
				<xsd:attribute name="unitType" type="opticon:UnitType" default="ABSOLUTE" />
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>

	<xsd:complexType name="Load">
		<xsd:sequence>
			<xsd:element name="spareCPUs" type="opticon:spareCPUs"
				minOccurs="0" maxOccurs="1" />
			<xsd:element name="spareNodes" type="opticon:spareNodes"
				minOccurs="0" maxOccurs="1" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="Period">
		<xsd:sequence>
			<!--based on ISO 8601 for date, time and duration format -->
			<!-- dateTime: YYYY-MM-DDTHH:MM:SSZ example: 2011-05-04T11:51:36Z -->
			<xsd:element name="Starts" type="xsd:dateTime" minOccurs="0"
				maxOccurs="1" />
			<xsd:element name="Ends" type="xsd:dateTime" minOccurs="0"
				maxOccurs="1" />
			<!--duration: PnYnMnDTnHnMnS example: P1DT2H30M or PT26H30M or PT26,5H -->
			<xsd:element name="Duration" type="xsd:duration"
				minOccurs="0" maxOccurs="1" />
			<xsd:element name="Repeats" type="opticon:Repeats"
				minOccurs="0" maxOccurs="1" />
			<xsd:element name="Load" type="opticon:Load"
				minOccurs="1" maxOccurs="1" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- ****************** Placement Constraints ********************* -->

	<xsd:complexType name="PlacementConstraint" />

	<!-- A constraint to enforce a set of virtual machines to avoid to be hosted 
		on a group of nodes -->
	<xsd:complexType name="Ban">
		<xsd:complexContent>
			<xsd:extension base="opticon:PlacementConstraint">
				<xsd:sequence>
					<xsd:element name="VMName" type="xsd:string" minOccurs="1"
						maxOccurs="unbounded" /> <!-- The set of VMs involved in the constraint. -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- A constraint to restrict the number of virtual machines a set of nodes 
		can host simultaneously. -->
	<xsd:complexType name="Capacity">
		<xsd:complexContent>
			<xsd:extension base="opticon:PlacementConstraint">
				<xsd:sequence>
					<xsd:element name="MaxNbOfVMs" type="xsd:int"
						minOccurs="1" maxOccurs="1" /> <!-- the max number of virtual machines -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- A constraint to enforce a set of virtual machines to be hosted on a 
		single group of physical elements. -->
	<xsd:complexType name="Fence">
		<xsd:complexContent>
			<xsd:extension base="opticon:PlacementConstraint">
				<xsd:sequence>
					<xsd:element name="VMName" type="xsd:string" minOccurs="1"
						maxOccurs="unbounded" /> <!-- The list of VMs involved in the constraint. -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- A constraint to assign a set of virtual machines to a single node. -->
	<xsd:complexType name="Gather">
		<xsd:complexContent>
			<xsd:extension base="opticon:PlacementConstraint">
				<xsd:sequence>
					<xsd:element name="VMName" type="xsd:string" minOccurs="1"
						maxOccurs="unbounded" /> <!-- The list of VMs involved in the constraint. -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- A placement constraint to ensure the given set of VMs will not be hosted 
		on nodes that host other VMs -->
	<xsd:complexType name="Lonely">
		<xsd:complexContent>
			<xsd:extension base="opticon:PlacementConstraint">
				<xsd:sequence>
					<xsd:element name="VMName" type="xsd:string" minOccurs="1"
						maxOccurs="unbounded" /> <!-- The list of VMs that shouldn't be hosted on the same node -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<!-- A constraint to force local operation. A running VM can not be migrated. 
		Other VMs are ignored. -->
	<xsd:complexType name="Root">
		<xsd:complexContent>
			<xsd:extension base="opticon:PlacementConstraint">
				<xsd:sequence>
					<xsd:element name="VMName" type="xsd:string" minOccurs="1"
						maxOccurs="unbounded" /> <!-- The VMs to manipulate. -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!-- A constraint to enforce that two vmset can not share nodes. All the 
		VMs of the first set can not be hosted on any node that host VMs of the second 
		set. -->
	<xsd:complexType name="Split">
		<xsd:complexContent>
			<xsd:extension base="opticon:PlacementConstraint">
				<xsd:sequence>
					<xsd:element name="VMGroup1" type="opticon:VMGroup" /> <!-- The first vmset. -->
					<xsd:element name="VMGroup2" type="opticon:VMGroup" /> <!-- The second vmset. -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="VMGroup">
		<xsd:sequence>
			<xsd:element name="VMName" type="xsd:string" minOccurs="1"
				maxOccurs="unbounded" /> <!-- The VMs to manipulate. -->
		</xsd:sequence>
	</xsd:complexType>


	<!-- A constraint to ensure a set of VMs will be hosted on different nodes. -->
	<xsd:complexType name="Spread">
		<xsd:complexContent>
			<xsd:extension base="opticon:PlacementConstraint">
				<xsd:sequence>
					<xsd:element name="VMName" type="xsd:string" minOccurs="1"
						maxOccurs="unbounded" /> <!-- The VMs to manipulate. -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="Constraint">
		<xsd:sequence>
			<xsd:element name="PlacementConstraint" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="Ban" type="opticon:Ban" minOccurs="0"
							maxOccurs="unbounded" />
						<xsd:element name="Capacity" type="opticon:Capacity"
							minOccurs="0" maxOccurs="unbounded" />
						<xsd:element name="Fence" type="opticon:Fence"
							minOccurs="0" maxOccurs="unbounded" />
						<xsd:element name="Gather" type="opticon:Gather"
							minOccurs="0" maxOccurs="unbounded" />
						<xsd:element name="Lonely" type="opticon:Lonely"
							minOccurs="0" maxOccurs="unbounded" />
						<xsd:element name="Root" type="opticon:Root"
							minOccurs="0" maxOccurs="unbounded" />
						<xsd:element name="Split" type="opticon:Split"
							minOccurs="0" maxOccurs="unbounded" />
						<xsd:element name="Spread" type="opticon:Spread"
							minOccurs="0" maxOccurs="unbounded" />
					</xsd:sequence>
					<xsd:attribute name="id" type="xsd:ID" use="required" />
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	
</xsd:schema>
