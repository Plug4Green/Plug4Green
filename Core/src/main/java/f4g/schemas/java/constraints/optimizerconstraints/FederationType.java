//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.10 at 04:34:50 PM CEST 
//


package f4g.schemas.java.constraints.optimizerconstraints;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import com.massfords.humantask.Visitable;
import com.massfords.humantask.Visitor;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for FederationType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="FederationType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Name" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="BoundedCluster" type="{f4g/schemas/java/constraints/OptimizerConstraints}boundedClustersType"/&gt;
 *         &lt;element name="BoundedPolicies" type="{f4g/schemas/java/constraints/OptimizerConstraints}boundedPoliciesType"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FederationType", propOrder = {
    "name",
    "boundedCluster",
    "boundedPolicies"
})
public class FederationType implements Cloneable, Visitable, CopyTo
{

    @XmlElement(name = "Name", required = true)
    protected String name;
    @XmlElement(name = "BoundedCluster", required = true)
    protected BoundedClustersType boundedCluster;
    @XmlElement(name = "BoundedPolicies", required = true)
    protected BoundedPoliciesType boundedPolicies;

    /**
     * Default no-arg constructor
     * 
     */
    public FederationType() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public FederationType(final String name, final BoundedClustersType boundedCluster, final BoundedPoliciesType boundedPolicies) {
        this.name = name;
        this.boundedCluster = boundedCluster;
        this.boundedPolicies = boundedPolicies;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the boundedCluster property.
     * 
     * @return
     *     possible object is
     *     {@link BoundedClustersType }
     *     
     */
    public BoundedClustersType getBoundedCluster() {
        return boundedCluster;
    }

    /**
     * Sets the value of the boundedCluster property.
     * 
     * @param value
     *     allowed object is
     *     {@link BoundedClustersType }
     *     
     */
    public void setBoundedCluster(BoundedClustersType value) {
        this.boundedCluster = value;
    }

    /**
     * Gets the value of the boundedPolicies property.
     * 
     * @return
     *     possible object is
     *     {@link BoundedPoliciesType }
     *     
     */
    public BoundedPoliciesType getBoundedPolicies() {
        return boundedPolicies;
    }

    /**
     * Sets the value of the boundedPolicies property.
     * 
     * @param value
     *     allowed object is
     *     {@link BoundedPoliciesType }
     *     
     */
    public void setBoundedPolicies(BoundedPoliciesType value) {
        this.boundedPolicies = value;
    }

    public void accept(Visitor aVisitor) {
        aVisitor.visit(this);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof FederationType) {
            final FederationType copy = ((FederationType) draftCopy);
            if (this.name!= null) {
                String sourceName;
                sourceName = this.getName();
                String copyName = ((String) strategy.copy(LocatorUtils.property(locator, "name", sourceName), sourceName));
                copy.setName(copyName);
            } else {
                copy.name = null;
            }
            if (this.boundedCluster!= null) {
                BoundedClustersType sourceBoundedCluster;
                sourceBoundedCluster = this.getBoundedCluster();
                BoundedClustersType copyBoundedCluster = ((BoundedClustersType) strategy.copy(LocatorUtils.property(locator, "boundedCluster", sourceBoundedCluster), sourceBoundedCluster));
                copy.setBoundedCluster(copyBoundedCluster);
            } else {
                copy.boundedCluster = null;
            }
            if (this.boundedPolicies!= null) {
                BoundedPoliciesType sourceBoundedPolicies;
                sourceBoundedPolicies = this.getBoundedPolicies();
                BoundedPoliciesType copyBoundedPolicies = ((BoundedPoliciesType) strategy.copy(LocatorUtils.property(locator, "boundedPolicies", sourceBoundedPolicies), sourceBoundedPolicies));
                copy.setBoundedPolicies(copyBoundedPolicies);
            } else {
                copy.boundedPolicies = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new FederationType();
    }

}
