//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.10 at 04:34:50 PM CEST 
//


package f4g.schemas.java.constraints.optimizerconstraints;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlIDREF;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import com.massfords.humantask.Visitable;
import com.massfords.humantask.Visitor;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for boundedPlacementConstraint complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="boundedPlacementConstraint"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="PlacementConstraint" maxOccurs="unbounded"&gt;
 *           &lt;complexType&gt;
 *             &lt;complexContent&gt;
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *                 &lt;attribute name="idref" use="required" type="{http://www.w3.org/2001/XMLSchema}IDREF" /&gt;
 *               &lt;/restriction&gt;
 *             &lt;/complexContent&gt;
 *           &lt;/complexType&gt;
 *         &lt;/element&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "boundedPlacementConstraint", propOrder = {
    "placementConstraint"
})
public class BoundedPlacementConstraint implements Cloneable, Visitable, CopyTo
{

    @XmlElement(name = "PlacementConstraint", required = true)
    protected List<BoundedPlacementConstraint.PlacementConstraint> placementConstraint;

    /**
     * Default no-arg constructor
     * 
     */
    public BoundedPlacementConstraint() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public BoundedPlacementConstraint(final List<BoundedPlacementConstraint.PlacementConstraint> placementConstraint) {
        this.placementConstraint = placementConstraint;
    }

    /**
     * Gets the value of the placementConstraint property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the placementConstraint property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPlacementConstraint().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link BoundedPlacementConstraint.PlacementConstraint }
     * 
     * 
     */
    public List<BoundedPlacementConstraint.PlacementConstraint> getPlacementConstraint() {
        if (placementConstraint == null) {
            placementConstraint = new ArrayList<BoundedPlacementConstraint.PlacementConstraint>();
        }
        return this.placementConstraint;
    }

    public void accept(Visitor aVisitor) {
        aVisitor.visit(this);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof BoundedPlacementConstraint) {
            final BoundedPlacementConstraint copy = ((BoundedPlacementConstraint) draftCopy);
            if ((this.placementConstraint!= null)&&(!this.placementConstraint.isEmpty())) {
                List<BoundedPlacementConstraint.PlacementConstraint> sourcePlacementConstraint;
                sourcePlacementConstraint = (((this.placementConstraint!= null)&&(!this.placementConstraint.isEmpty()))?this.getPlacementConstraint():null);
                @SuppressWarnings("unchecked")
                List<BoundedPlacementConstraint.PlacementConstraint> copyPlacementConstraint = ((List<BoundedPlacementConstraint.PlacementConstraint> ) strategy.copy(LocatorUtils.property(locator, "placementConstraint", sourcePlacementConstraint), sourcePlacementConstraint));
                copy.placementConstraint = null;
                if (copyPlacementConstraint!= null) {
                    List<BoundedPlacementConstraint.PlacementConstraint> uniquePlacementConstraintl = copy.getPlacementConstraint();
                    uniquePlacementConstraintl.addAll(copyPlacementConstraint);
                }
            } else {
                copy.placementConstraint = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new BoundedPlacementConstraint();
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType&gt;
     *   &lt;complexContent&gt;
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
     *       &lt;attribute name="idref" use="required" type="{http://www.w3.org/2001/XMLSchema}IDREF" /&gt;
     *     &lt;/restriction&gt;
     *   &lt;/complexContent&gt;
     * &lt;/complexType&gt;
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "")
    public static class PlacementConstraint implements Cloneable, Visitable, CopyTo
    {

        @XmlAttribute(name = "idref", required = true)
        @XmlIDREF
        @XmlSchemaType(name = "IDREF")
        protected Constraint.PlacementConstraint idref;

        /**
         * Default no-arg constructor
         * 
         */
        public PlacementConstraint() {
            super();
        }

        /**
         * Fully-initialising value constructor
         * 
         */
        public PlacementConstraint(final Constraint.PlacementConstraint idref) {
            this.idref = idref;
        }

        /**
         * Gets the value of the idref property.
         * 
         * @return
         *     possible object is
         *     {@link Object }
         *     
         */
        public Constraint.PlacementConstraint getIdref() {
            return idref;
        }

        /**
         * Sets the value of the idref property.
         * 
         * @param value
         *     allowed object is
         *     {@link Object }
         *     
         */
        public void setIdref(Constraint.PlacementConstraint value) {
            this.idref = value;
        }

        public void accept(Visitor aVisitor) {
            aVisitor.visit(this);
        }

        public Object clone() {
            return copyTo(createNewInstance());
        }

        public Object copyTo(Object target) {
            final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
            return copyTo(null, target, strategy);
        }

        public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
            final Object draftCopy = ((target == null)?createNewInstance():target);
            if (draftCopy instanceof BoundedPlacementConstraint.PlacementConstraint) {
                final BoundedPlacementConstraint.PlacementConstraint copy = ((BoundedPlacementConstraint.PlacementConstraint) draftCopy);
                if (this.idref!= null) {
                    Constraint.PlacementConstraint sourceIdref;
                    sourceIdref = this.getIdref();
                    Constraint.PlacementConstraint copyIdref = ((Constraint.PlacementConstraint) strategy.copy(LocatorUtils.property(locator, "idref", sourceIdref), sourceIdref));
                    copy.setIdref(copyIdref);
                } else {
                    copy.idref = null;
                }
            }
            return draftCopy;
        }

        public Object createNewInstance() {
            return new BoundedPlacementConstraint.PlacementConstraint();
        }

    }

}
