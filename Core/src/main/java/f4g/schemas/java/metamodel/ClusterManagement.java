//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.10 at 04:34:50 PM CEST 
//


package f4g.schemas.java.metamodel;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.namespace.QName;
import com.massfords.humantask.Visitable;
import com.massfords.humantask.Visitor;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for ClusterManagement complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ClusterManagement"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{f4g/schemas/java/MetaModel}SoftwareApplication"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="queue" type="{f4g/schemas/java/MetaModel}Queue"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ClusterManagement", propOrder = {
    "queue"
})
public class ClusterManagement
    extends SoftwareApplication
    implements Cloneable, Visitable, CopyTo
{

    @XmlElement(required = true)
    protected Queue queue;

    /**
     * Default no-arg constructor
     * 
     */
    public ClusterManagement() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public ClusterManagement(final String name, final NrOfCpus numberOfCPUs, final CpuUsage actualCPUUsage, final StorageUsage actualStorageUsage, final IoRate actualDiskIORate, final MemoryUsage actualMemoryUsage, final NetworkUsage actualNetworkUsage, final QName jaxbElementName, final Queue queue) {
        super(name, numberOfCPUs, actualCPUUsage, actualStorageUsage, actualDiskIORate, actualMemoryUsage, actualNetworkUsage, jaxbElementName);
        this.queue = queue;
    }

    /**
     * Gets the value of the queue property.
     * 
     * @return
     *     possible object is
     *     {@link Queue }
     *     
     */
    public Queue getQueue() {
        return queue;
    }

    /**
     * Sets the value of the queue property.
     * 
     * @param value
     *     allowed object is
     *     {@link Queue }
     *     
     */
    public void setQueue(Queue value) {
        this.queue = value;
    }

    public void accept(Visitor aVisitor) {
        aVisitor.visit(this);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        super.copyTo(locator, draftCopy, strategy);
        if (draftCopy instanceof ClusterManagement) {
            final ClusterManagement copy = ((ClusterManagement) draftCopy);
            if (this.queue!= null) {
                Queue sourceQueue;
                sourceQueue = this.getQueue();
                Queue copyQueue = ((Queue) strategy.copy(LocatorUtils.property(locator, "queue", sourceQueue), sourceQueue));
                copy.setQueue(copyQueue);
            } else {
                copy.queue = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new ClusterManagement();
    }

}
