//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.10 at 04:34:50 PM CEST 
//


package f4g.schemas.java.metamodel;

import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;
import com.massfords.humantask.Visitable;
import com.massfords.humantask.Visitor;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for Controller complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Controller"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{f4g/schemas/java/MetaModel}CPU"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="controllerId" type="{http://www.w3.org/2001/XMLSchema}ID"/&gt;
 *         &lt;element ref="{f4g/schemas/java/MetaModel}NativeOperatingSystem" minOccurs="0"/&gt;
 *         &lt;element ref="{f4g/schemas/java/MetaModel}NativeHypervisor" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Controller", propOrder = {
    "controllerId",
    "nativeOperatingSystem",
    "nativeHypervisor"
})
public class Controller
    extends CPU
    implements Cloneable, Visitable, CopyTo
{

    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String controllerId;
    @XmlElement(name = "NativeOperatingSystem", namespace = "f4g/schemas/java/MetaModel")
    protected NativeOperatingSystem nativeOperatingSystem;
    @XmlElement(name = "NativeHypervisor", namespace = "f4g/schemas/java/MetaModel")
    protected NativeHypervisor nativeHypervisor;

    /**
     * Default no-arg constructor
     * 
     */
    public Controller() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public Controller(final String frameworkID, final CPUArchitecture architecture, final boolean dvfs, final Lithography lithography, final Power powerIdle, final Power powerMax, final Power computedPower, final CpuUsage cpuUsage, final NrOfTransistors transistorNumber, final List<Core> core, final List<Cache> cache, final QName jaxbElementName, final String controllerId, final NativeOperatingSystem nativeOperatingSystem, final NativeHypervisor nativeHypervisor) {
        super(frameworkID, architecture, dvfs, lithography, powerIdle, powerMax, computedPower, cpuUsage, transistorNumber, core, cache, jaxbElementName);
        this.controllerId = controllerId;
        this.nativeOperatingSystem = nativeOperatingSystem;
        this.nativeHypervisor = nativeHypervisor;
    }

    /**
     * Gets the value of the controllerId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getControllerId() {
        return controllerId;
    }

    /**
     * Sets the value of the controllerId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setControllerId(String value) {
        this.controllerId = value;
    }

    /**
     * Gets the value of the nativeOperatingSystem property.
     * 
     * @return
     *     possible object is
     *     {@link NativeOperatingSystem }
     *     
     */
    public NativeOperatingSystem getNativeOperatingSystem() {
        return nativeOperatingSystem;
    }

    /**
     * Sets the value of the nativeOperatingSystem property.
     * 
     * @param value
     *     allowed object is
     *     {@link NativeOperatingSystem }
     *     
     */
    public void setNativeOperatingSystem(NativeOperatingSystem value) {
        this.nativeOperatingSystem = value;
    }

    /**
     * Gets the value of the nativeHypervisor property.
     * 
     * @return
     *     possible object is
     *     {@link NativeHypervisor }
     *     
     */
    public NativeHypervisor getNativeHypervisor() {
        return nativeHypervisor;
    }

    /**
     * Sets the value of the nativeHypervisor property.
     * 
     * @param value
     *     allowed object is
     *     {@link NativeHypervisor }
     *     
     */
    public void setNativeHypervisor(NativeHypervisor value) {
        this.nativeHypervisor = value;
    }

    public void accept(Visitor aVisitor) {
        aVisitor.visit(this);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        super.copyTo(locator, draftCopy, strategy);
        if (draftCopy instanceof Controller) {
            final Controller copy = ((Controller) draftCopy);
            if (this.controllerId!= null) {
                String sourceControllerId;
                sourceControllerId = this.getControllerId();
                String copyControllerId = ((String) strategy.copy(LocatorUtils.property(locator, "controllerId", sourceControllerId), sourceControllerId));
                copy.setControllerId(copyControllerId);
            } else {
                copy.controllerId = null;
            }
            if (this.nativeOperatingSystem!= null) {
                NativeOperatingSystem sourceNativeOperatingSystem;
                sourceNativeOperatingSystem = this.getNativeOperatingSystem();
                NativeOperatingSystem copyNativeOperatingSystem = ((NativeOperatingSystem) strategy.copy(LocatorUtils.property(locator, "nativeOperatingSystem", sourceNativeOperatingSystem), sourceNativeOperatingSystem));
                copy.setNativeOperatingSystem(copyNativeOperatingSystem);
            } else {
                copy.nativeOperatingSystem = null;
            }
            if (this.nativeHypervisor!= null) {
                NativeHypervisor sourceNativeHypervisor;
                sourceNativeHypervisor = this.getNativeHypervisor();
                NativeHypervisor copyNativeHypervisor = ((NativeHypervisor) strategy.copy(LocatorUtils.property(locator, "nativeHypervisor", sourceNativeHypervisor), sourceNativeHypervisor));
                copy.setNativeHypervisor(copyNativeHypervisor);
            } else {
                copy.nativeHypervisor = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new Controller();
    }

}
