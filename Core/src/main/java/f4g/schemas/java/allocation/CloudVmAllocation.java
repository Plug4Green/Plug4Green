//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.08.10 at 04:34:50 PM CEST 
//


package f4g.schemas.java.allocation;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.namespace.QName;
import com.massfords.humantask.Visitable;
import com.massfords.humantask.Visitor;
import org.jvnet.jaxb2_commons.lang.CopyStrategy;
import org.jvnet.jaxb2_commons.lang.CopyTo;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * VM Allocation request for cloud computing style
 * 
 * <p>Java class for CloudVmAllocation complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CloudVmAllocation"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{f4g/schemas/java/Allocation}Request"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="imageId" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="clusterId" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="vm" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="userId" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/&gt;
 *         &lt;element name="minPriority" type="{http://www.w3.org/2001/XMLSchema}int" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CloudVmAllocation", propOrder = {
    "imageId",
    "clusterId",
    "vm",
    "userId",
    "minPriority"
})
public class CloudVmAllocation
    extends Request
    implements Cloneable, Visitable, CopyTo
{

    @XmlElement(required = true)
    protected String imageId;
    protected List<String> clusterId;
    @XmlElement(required = true)
    protected String vm;
    protected String userId;
    protected Integer minPriority;

    /**
     * Default no-arg constructor
     * 
     */
    public CloudVmAllocation() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public CloudVmAllocation(final QName jaxbElementName, final String imageId, final List<String> clusterId, final String vm, final String userId, final Integer minPriority) {
        super(jaxbElementName);
        this.imageId = imageId;
        this.clusterId = clusterId;
        this.vm = vm;
        this.userId = userId;
        this.minPriority = minPriority;
    }

    /**
     * Gets the value of the imageId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getImageId() {
        return imageId;
    }

    /**
     * Sets the value of the imageId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setImageId(String value) {
        this.imageId = value;
    }

    /**
     * Gets the value of the clusterId property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the clusterId property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getClusterId().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getClusterId() {
        if (clusterId == null) {
            clusterId = new ArrayList<String>();
        }
        return this.clusterId;
    }

    /**
     * Gets the value of the vm property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVm() {
        return vm;
    }

    /**
     * Sets the value of the vm property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVm(String value) {
        this.vm = value;
    }

    /**
     * Gets the value of the userId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUserId() {
        return userId;
    }

    /**
     * Sets the value of the userId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUserId(String value) {
        this.userId = value;
    }

    /**
     * Gets the value of the minPriority property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getMinPriority() {
        return minPriority;
    }

    /**
     * Sets the value of the minPriority property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setMinPriority(Integer value) {
        this.minPriority = value;
    }

    public void accept(Visitor aVisitor) {
        aVisitor.visit(this);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        super.copyTo(locator, draftCopy, strategy);
        if (draftCopy instanceof CloudVmAllocation) {
            final CloudVmAllocation copy = ((CloudVmAllocation) draftCopy);
            if (this.imageId!= null) {
                String sourceImageId;
                sourceImageId = this.getImageId();
                String copyImageId = ((String) strategy.copy(LocatorUtils.property(locator, "imageId", sourceImageId), sourceImageId));
                copy.setImageId(copyImageId);
            } else {
                copy.imageId = null;
            }
            if ((this.clusterId!= null)&&(!this.clusterId.isEmpty())) {
                List<String> sourceClusterId;
                sourceClusterId = (((this.clusterId!= null)&&(!this.clusterId.isEmpty()))?this.getClusterId():null);
                @SuppressWarnings("unchecked")
                List<String> copyClusterId = ((List<String> ) strategy.copy(LocatorUtils.property(locator, "clusterId", sourceClusterId), sourceClusterId));
                copy.clusterId = null;
                if (copyClusterId!= null) {
                    List<String> uniqueClusterIdl = copy.getClusterId();
                    uniqueClusterIdl.addAll(copyClusterId);
                }
            } else {
                copy.clusterId = null;
            }
            if (this.vm!= null) {
                String sourceVm;
                sourceVm = this.getVm();
                String copyVm = ((String) strategy.copy(LocatorUtils.property(locator, "vm", sourceVm), sourceVm));
                copy.setVm(copyVm);
            } else {
                copy.vm = null;
            }
            if (this.userId!= null) {
                String sourceUserId;
                sourceUserId = this.getUserId();
                String copyUserId = ((String) strategy.copy(LocatorUtils.property(locator, "userId", sourceUserId), sourceUserId));
                copy.setUserId(copyUserId);
            } else {
                copy.userId = null;
            }
            if (this.minPriority!= null) {
                Integer sourceMinPriority;
                sourceMinPriority = this.getMinPriority();
                Integer copyMinPriority = ((Integer) strategy.copy(LocatorUtils.property(locator, "minPriority", sourceMinPriority), sourceMinPriority));
                copy.setMinPriority(copyMinPriority);
            } else {
                copy.minPriority = null;
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new CloudVmAllocation();
    }

}
