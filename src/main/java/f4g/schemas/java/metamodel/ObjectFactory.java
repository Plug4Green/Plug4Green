//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.07.30 at 04:51:12 PM CEST 
//


package java.metamodel;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the java.metamodel package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _RackableSwitch_QNAME = new QName("java/MetaModel", "RackableSwitch");
    private final static QName _RAMStick_QNAME = new QName("java/MetaModel", "RAMStick");
    private final static QName _FiberchannelNIC_QNAME = new QName("java/MetaModel", "FiberchannelNIC");
    private final static QName _RackableRouter_QNAME = new QName("java/MetaModel", "RackableRouter");
    private final static QName _BladeServer_QNAME = new QName("java/MetaModel", "BladeServer");
    private final static QName _Tunnel_QNAME = new QName("java/MetaModel", "Tunnel");
    private final static QName _SerialPPP_QNAME = new QName("java/MetaModel", "SerialPPP");
    private final static QName _JobActions_QNAME = new QName("java/MetaModel", "JobActions");
    private final static QName _SoftwareNetwork_QNAME = new QName("java/MetaModel", "SoftwareNetwork");
    private final static QName _VPN_QNAME = new QName("java/MetaModel", "VPN");
    private final static QName _Queue_QNAME = new QName("java/MetaModel", "Queue");
    private final static QName _NAS_QNAME = new QName("java/MetaModel", "NAS");
    private final static QName _OperatingSystem_QNAME = new QName("java/MetaModel", "OperatingSystem");
    private final static QName _Site_QNAME = new QName("java/MetaModel", "Site");
    private final static QName _ApplicationBenchmark_QNAME = new QName("java/MetaModel", "ApplicationBenchmark");
    private final static QName _PSU_QNAME = new QName("java/MetaModel", "PSU");
    private final static QName _EthernetNIC_QNAME = new QName("java/MetaModel", "EthernetNIC");
    private final static QName _Cache_QNAME = new QName("java/MetaModel", "Cache");
    private final static QName _NetworkNode_QNAME = new QName("java/MetaModel", "NetworkNode");
    private final static QName _FileSystem_QNAME = new QName("java/MetaModel", "FileSystem");
    private final static QName _Rack_QNAME = new QName("java/MetaModel", "Rack");
    private final static QName _Server_QNAME = new QName("java/MetaModel", "Server");
    private final static QName _StorageUnit_QNAME = new QName("java/MetaModel", "StorageUnit");
    private final static QName _Controller_QNAME = new QName("java/MetaModel", "Controller");
    private final static QName _HostedHypervisor_QNAME = new QName("java/MetaModel", "HostedHypervisor");
    private final static QName _NodeActions_QNAME = new QName("java/MetaModel", "NodeActions");
    private final static QName _LogicalUnit_QNAME = new QName("java/MetaModel", "LogicalUnit");
    private final static QName _Node_QNAME = new QName("java/MetaModel", "Node");
    private final static QName _RAIDDisk_QNAME = new QName("java/MetaModel", "RAIDDisk");
    private final static QName _BoxRouter_QNAME = new QName("java/MetaModel", "BoxRouter");
    private final static QName _FIT4Green_QNAME = new QName("java/MetaModel", "FIT4Green");
    private final static QName _Enclosure_QNAME = new QName("java/MetaModel", "Enclosure");
    private final static QName _Ethernet_QNAME = new QName("java/MetaModel", "Ethernet");
    private final static QName _BoxSwitch_QNAME = new QName("java/MetaModel", "BoxSwitch");
    private final static QName _SolidStateDisk_QNAME = new QName("java/MetaModel", "SolidStateDisk");
    private final static QName _Flow_QNAME = new QName("java/MetaModel", "Flow");
    private final static QName _NativeOperatingSystem_QNAME = new QName("java/MetaModel", "NativeOperatingSystem");
    private final static QName _LUN_QNAME = new QName("java/MetaModel", "LUN");
    private final static QName _SoftwareApplication_QNAME = new QName("java/MetaModel", "SoftwareApplication");
    private final static QName _SoftwareRAID_QNAME = new QName("java/MetaModel", "SoftwareRAID");
    private final static QName _OpticalFDDI_QNAME = new QName("java/MetaModel", "OpticalFDDI");
    private final static QName _CPU_QNAME = new QName("java/MetaModel", "CPU");
    private final static QName _VirtualMachine_QNAME = new QName("java/MetaModel", "VirtualMachine");
    private final static QName _HostedOperatingSystem_QNAME = new QName("java/MetaModel", "HostedOperatingSystem");
    private final static QName _HardDisk_QNAME = new QName("java/MetaModel", "HardDisk");
    private final static QName _SAN_QNAME = new QName("java/MetaModel", "SAN");
    private final static QName _E80211X_QNAME = new QName("java/MetaModel", "e80211x");
    private final static QName _Datacenter_QNAME = new QName("java/MetaModel", "Datacenter");
    private final static QName _NativeHypervisor_QNAME = new QName("java/MetaModel", "NativeHypervisor");
    private final static QName _PDU_QNAME = new QName("java/MetaModel", "PDU");
    private final static QName _TowerServer_QNAME = new QName("java/MetaModel", "TowerServer");
    private final static QName _LogicalVolume_QNAME = new QName("java/MetaModel", "LogicalVolume");
    private final static QName _RackableServer_QNAME = new QName("java/MetaModel", "RackableServer");
    private final static QName _NetworkLoad_QNAME = new QName("java/MetaModel", "NetworkLoad");
    private final static QName _NetworkPort_QNAME = new QName("java/MetaModel", "NetworkPort");
    private final static QName _WaterCooler_QNAME = new QName("java/MetaModel", "WaterCooler");
    private final static QName _Core_QNAME = new QName("java/MetaModel", "Core");
    private final static QName _FrameworkCapabilities_QNAME = new QName("java/MetaModel", "FrameworkCapabilities");
    private final static QName _Fan_QNAME = new QName("java/MetaModel", "Fan");
    private final static QName _VMActions_QNAME = new QName("java/MetaModel", "VMActions");
    private final static QName _ATM_QNAME = new QName("java/MetaModel", "ATM");
    private final static QName _Mainboard_QNAME = new QName("java/MetaModel", "Mainboard");
    private final static QName _Link_QNAME = new QName("java/MetaModel", "Link");
    private final static QName _RAID_QNAME = new QName("java/MetaModel", "RAID");
    private final static QName _Job_QNAME = new QName("java/MetaModel", "Job");
    private final static QName _HardwareRAID_QNAME = new QName("java/MetaModel", "HardwareRAID");
    private final static QName _Role_QNAME = new QName("java/MetaModel", "Role");
    private final static QName _ClusterManagement_QNAME = new QName("java/MetaModel", "ClusterManagement");
    private final static QName _GPU_QNAME = new QName("java/MetaModel", "GPU");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: java.metamodel
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link JobActionsType }
     * 
     */
    public JobActionsType createJobActionsType() {
        return new JobActionsType();
    }

    /**
     * Create an instance of {@link BladeServerType }
     * 
     */
    public BladeServerType createBladeServerType() {
        return new BladeServerType();
    }

    /**
     * Create an instance of {@link SolidStateDiskType }
     * 
     */
    public SolidStateDiskType createSolidStateDiskType() {
        return new SolidStateDiskType();
    }

    /**
     * Create an instance of {@link LogicalUnitType }
     * 
     */
    public LogicalUnitType createLogicalUnitType() {
        return new LogicalUnitType();
    }

    /**
     * Create an instance of {@link VirtualMachineType }
     * 
     */
    public VirtualMachineType createVirtualMachineType() {
        return new VirtualMachineType();
    }

    /**
     * Create an instance of {@link NetworkUsageType }
     * 
     */
    public NetworkUsageType createNetworkUsageType() {
        return new NetworkUsageType();
    }

    /**
     * Create an instance of {@link QueuePriorityType }
     * 
     */
    public QueuePriorityType createQueuePriorityType() {
        return new QueuePriorityType();
    }

    /**
     * Create an instance of {@link EthernetType }
     * 
     */
    public EthernetType createEthernetType() {
        return new EthernetType();
    }

    /**
     * Create an instance of {@link SANType }
     * 
     */
    public SANType createSANType() {
        return new SANType();
    }

    /**
     * Create an instance of {@link SerialPPPType }
     * 
     */
    public SerialPPPType createSerialPPPType() {
        return new SerialPPPType();
    }

    /**
     * Create an instance of {@link IntPercentType }
     * 
     */
    public IntPercentType createIntPercentType() {
        return new IntPercentType();
    }

    /**
     * Create an instance of {@link CoolingSystemType }
     * 
     */
    public CoolingSystemType createCoolingSystemType() {
        return new CoolingSystemType();
    }

    /**
     * Create an instance of {@link ATMType }
     * 
     */
    public ATMType createATMType() {
        return new ATMType();
    }

    /**
     * Create an instance of {@link RackableNetworkType }
     * 
     */
    public RackableNetworkType createRackableNetworkType() {
        return new RackableNetworkType();
    }

    /**
     * Create an instance of {@link SoftwareNetworkType }
     * 
     */
    public SoftwareNetworkType createSoftwareNetworkType() {
        return new SoftwareNetworkType();
    }

    /**
     * Create an instance of {@link NrOfPortsType }
     * 
     */
    public NrOfPortsType createNrOfPortsType() {
        return new NrOfPortsType();
    }

    /**
     * Create an instance of {@link RackableServerType }
     * 
     */
    public RackableServerType createRackableServerType() {
        return new RackableServerType();
    }

    /**
     * Create an instance of {@link OPType }
     * 
     */
    public OPType createOPType() {
        return new OPType();
    }

    /**
     * Create an instance of {@link LithographyType }
     * 
     */
    public LithographyType createLithographyType() {
        return new LithographyType();
    }

    /**
     * Create an instance of {@link NativeOperatingSystemType }
     * 
     */
    public NativeOperatingSystemType createNativeOperatingSystemType() {
        return new NativeOperatingSystemType();
    }

    /**
     * Create an instance of {@link NetworkLoadType }
     * 
     */
    public NetworkLoadType createNetworkLoadType() {
        return new NetworkLoadType();
    }

    /**
     * Create an instance of {@link BoxNetworkType }
     * 
     */
    public BoxNetworkType createBoxNetworkType() {
        return new BoxNetworkType();
    }

    /**
     * Create an instance of {@link BandwidthType }
     * 
     */
    public BandwidthType createBandwidthType() {
        return new BandwidthType();
    }

    /**
     * Create an instance of {@link NrOfCoresType }
     * 
     */
    public NrOfCoresType createNrOfCoresType() {
        return new NrOfCoresType();
    }

    /**
     * Create an instance of {@link NetworkPortBufferSizeType }
     * 
     */
    public NetworkPortBufferSizeType createNetworkPortBufferSizeType() {
        return new NetworkPortBufferSizeType();
    }

    /**
     * Create an instance of {@link NrOfPstatesType }
     * 
     */
    public NrOfPstatesType createNrOfPstatesType() {
        return new NrOfPstatesType();
    }

    /**
     * Create an instance of {@link VMActionsType }
     * 
     */
    public VMActionsType createVMActionsType() {
        return new VMActionsType();
    }

    /**
     * Create an instance of {@link JobTimeType }
     * 
     */
    public JobTimeType createJobTimeType() {
        return new JobTimeType();
    }

    /**
     * Create an instance of {@link MemoryUsageType }
     * 
     */
    public MemoryUsageType createMemoryUsageType() {
        return new MemoryUsageType();
    }

    /**
     * Create an instance of {@link FileSystemSpaceType }
     * 
     */
    public FileSystemSpaceType createFileSystemSpaceType() {
        return new FileSystemSpaceType();
    }

    /**
     * Create an instance of {@link CPUType }
     * 
     */
    public CPUType createCPUType() {
        return new CPUType();
    }

    /**
     * Create an instance of {@link NodeActionsType }
     * 
     */
    public NodeActionsType createNodeActionsType() {
        return new NodeActionsType();
    }

    /**
     * Create an instance of {@link NrOfCpusType }
     * 
     */
    public NrOfCpusType createNrOfCpusType() {
        return new NrOfCpusType();
    }

    /**
     * Create an instance of {@link CoreLoadType }
     * 
     */
    public CoreLoadType createCoreLoadType() {
        return new CoreLoadType();
    }

    /**
     * Create an instance of {@link StorageUnitType }
     * 
     */
    public StorageUnitType createStorageUnitType() {
        return new StorageUnitType();
    }

    /**
     * Create an instance of {@link HostedOperatingSystemType }
     * 
     */
    public HostedOperatingSystemType createHostedOperatingSystemType() {
        return new HostedOperatingSystemType();
    }

    /**
     * Create an instance of {@link LocationType }
     * 
     */
    public LocationType createLocationType() {
        return new LocationType();
    }

    /**
     * Create an instance of {@link FileSystemFragmentationType }
     * 
     */
    public FileSystemFragmentationType createFileSystemFragmentationType() {
        return new FileSystemFragmentationType();
    }

    /**
     * Create an instance of {@link ApplicationBenchmarkType }
     * 
     */
    public ApplicationBenchmarkType createApplicationBenchmarkType() {
        return new ApplicationBenchmarkType();
    }

    /**
     * Create an instance of {@link HardDiskType }
     * 
     */
    public HardDiskType createHardDiskType() {
        return new HardDiskType();
    }

    /**
     * Create an instance of {@link ClusterManagementType }
     * 
     */
    public ClusterManagementType createClusterManagementType() {
        return new ClusterManagementType();
    }

    /**
     * Create an instance of {@link BoxRouterType }
     * 
     */
    public BoxRouterType createBoxRouterType() {
        return new BoxRouterType();
    }

    /**
     * Create an instance of {@link JobPriorityType }
     * 
     */
    public JobPriorityType createJobPriorityType() {
        return new JobPriorityType();
    }

    /**
     * Create an instance of {@link RackableRouterType }
     * 
     */
    public RackableRouterType createRackableRouterType() {
        return new RackableRouterType();
    }

    /**
     * Create an instance of {@link SiteType }
     * 
     */
    public SiteType createSiteType() {
        return new SiteType();
    }

    /**
     * Create an instance of {@link NICType }
     * 
     */
    public NICType createNICType() {
        return new NICType();
    }

    /**
     * Create an instance of {@link LogicalVolumeType }
     * 
     */
    public LogicalVolumeType createLogicalVolumeType() {
        return new LogicalVolumeType();
    }

    /**
     * Create an instance of {@link DimensionType }
     * 
     */
    public DimensionType createDimensionType() {
        return new DimensionType();
    }

    /**
     * Create an instance of {@link FrameworkCapabilitiesType }
     * 
     */
    public FrameworkCapabilitiesType createFrameworkCapabilitiesType() {
        return new FrameworkCapabilitiesType();
    }

    /**
     * Create an instance of {@link NetworkTrafficType }
     * 
     */
    public NetworkTrafficType createNetworkTrafficType() {
        return new NetworkTrafficType();
    }

    /**
     * Create an instance of {@link TunnelType }
     * 
     */
    public TunnelType createTunnelType() {
        return new TunnelType();
    }

    /**
     * Create an instance of {@link EfficiencyType }
     * 
     */
    public EfficiencyType createEfficiencyType() {
        return new EfficiencyType();
    }

    /**
     * Create an instance of {@link IoRateType }
     * 
     */
    public IoRateType createIoRateType() {
        return new IoRateType();
    }

    /**
     * Create an instance of {@link FIT4GreenType }
     * 
     */
    public FIT4GreenType createFIT4GreenType() {
        return new FIT4GreenType();
    }

    /**
     * Create an instance of {@link HardwareRAIDType }
     * 
     */
    public HardwareRAIDType createHardwareRAIDType() {
        return new HardwareRAIDType();
    }

    /**
     * Create an instance of {@link NrOfPlugsType }
     * 
     */
    public NrOfPlugsType createNrOfPlugsType() {
        return new NrOfPlugsType();
    }

    /**
     * Create an instance of {@link RAMSizeType }
     * 
     */
    public RAMSizeType createRAMSizeType() {
        return new RAMSizeType();
    }

    /**
     * Create an instance of {@link HitRatioType }
     * 
     */
    public HitRatioType createHitRatioType() {
        return new HitRatioType();
    }

    /**
     * Create an instance of {@link CoreType }
     * 
     */
    public CoreType createCoreType() {
        return new CoreType();
    }

    /**
     * Create an instance of {@link RackableSwitchType }
     * 
     */
    public RackableSwitchType createRackableSwitchType() {
        return new RackableSwitchType();
    }

    /**
     * Create an instance of {@link RoleType }
     * 
     */
    public RoleType createRoleType() {
        return new RoleType();
    }

    /**
     * Create an instance of {@link NetworkPortBufferOccupancyType }
     * 
     */
    public NetworkPortBufferOccupancyType createNetworkPortBufferOccupancyType() {
        return new NetworkPortBufferOccupancyType();
    }

    /**
     * Create an instance of {@link LUNType }
     * 
     */
    public LUNType createLUNType() {
        return new LUNType();
    }

    /**
     * Create an instance of {@link QueueType }
     * 
     */
    public QueueType createQueueType() {
        return new QueueType();
    }

    /**
     * Create an instance of {@link EnclosureType }
     * 
     */
    public EnclosureType createEnclosureType() {
        return new EnclosureType();
    }

    /**
     * Create an instance of {@link BoxSwitchType }
     * 
     */
    public BoxSwitchType createBoxSwitchType() {
        return new BoxSwitchType();
    }

    /**
     * Create an instance of {@link IntAppRankType }
     * 
     */
    public IntAppRankType createIntAppRankType() {
        return new IntAppRankType();
    }

    /**
     * Create an instance of {@link TowerServerType }
     * 
     */
    public TowerServerType createTowerServerType() {
        return new TowerServerType();
    }

    /**
     * Create an instance of {@link ServerType }
     * 
     */
    public ServerType createServerType() {
        return new ServerType();
    }

    /**
     * Create an instance of {@link JobLimitType }
     * 
     */
    public JobLimitType createJobLimitType() {
        return new JobLimitType();
    }

    /**
     * Create an instance of {@link JobType }
     * 
     */
    public JobType createJobType() {
        return new JobType();
    }

    /**
     * Create an instance of {@link FrequencyType }
     * 
     */
    public FrequencyType createFrequencyType() {
        return new FrequencyType();
    }

    /**
     * Create an instance of {@link ControllerType }
     * 
     */
    public ControllerType createControllerType() {
        return new ControllerType();
    }

    /**
     * Create an instance of {@link CacheLevelType }
     * 
     */
    public CacheLevelType createCacheLevelType() {
        return new CacheLevelType();
    }

    /**
     * Create an instance of {@link OperatingSystemType }
     * 
     */
    public OperatingSystemType createOperatingSystemType() {
        return new OperatingSystemType();
    }

    /**
     * Create an instance of {@link BitErrorRateType }
     * 
     */
    public BitErrorRateType createBitErrorRateType() {
        return new BitErrorRateType();
    }

    /**
     * Create an instance of {@link E80211XType }
     * 
     */
    public E80211XType createE80211XType() {
        return new E80211XType();
    }

    /**
     * Create an instance of {@link NASType }
     * 
     */
    public NASType createNASType() {
        return new NASType();
    }

    /**
     * Create an instance of {@link RAIDLevelType }
     * 
     */
    public RAIDLevelType createRAIDLevelType() {
        return new RAIDLevelType();
    }

    /**
     * Create an instance of {@link NrOfLinksType }
     * 
     */
    public NrOfLinksType createNrOfLinksType() {
        return new NrOfLinksType();
    }

    /**
     * Create an instance of {@link BlockSizeType }
     * 
     */
    public BlockSizeType createBlockSizeType() {
        return new BlockSizeType();
    }

    /**
     * Create an instance of {@link HostedHypervisorType }
     * 
     */
    public HostedHypervisorType createHostedHypervisorType() {
        return new HostedHypervisorType();
    }

    /**
     * Create an instance of {@link GPUType }
     * 
     */
    public GPUType createGPUType() {
        return new GPUType();
    }

    /**
     * Create an instance of {@link StorageUsageType }
     * 
     */
    public StorageUsageType createStorageUsageType() {
        return new StorageUsageType();
    }

    /**
     * Create an instance of {@link RAIDDiskType }
     * 
     */
    public RAIDDiskType createRAIDDiskType() {
        return new RAIDDiskType();
    }

    /**
     * Create an instance of {@link LinkType }
     * 
     */
    public LinkType createLinkType() {
        return new LinkType();
    }

    /**
     * Create an instance of {@link SoftwareRAIDType }
     * 
     */
    public SoftwareRAIDType createSoftwareRAIDType() {
        return new SoftwareRAIDType();
    }

    /**
     * Create an instance of {@link PowerType }
     * 
     */
    public PowerType createPowerType() {
        return new PowerType();
    }

    /**
     * Create an instance of {@link PUEType }
     * 
     */
    public PUEType createPUEType() {
        return new PUEType();
    }

    /**
     * Create an instance of {@link PropagationDelayType }
     * 
     */
    public PropagationDelayType createPropagationDelayType() {
        return new PropagationDelayType();
    }

    /**
     * Create an instance of {@link CacheType }
     * 
     */
    public CacheType createCacheType() {
        return new CacheType();
    }

    /**
     * Create an instance of {@link FlowType }
     * 
     */
    public FlowType createFlowType() {
        return new FlowType();
    }

    /**
     * Create an instance of {@link NrOfTransistorsType }
     * 
     */
    public NrOfTransistorsType createNrOfTransistorsType() {
        return new NrOfTransistorsType();
    }

    /**
     * Create an instance of {@link RackType }
     * 
     */
    public RackType createRackType() {
        return new RackType();
    }

    /**
     * Create an instance of {@link StripSizeType }
     * 
     */
    public StripSizeType createStripSizeType() {
        return new StripSizeType();
    }

    /**
     * Create an instance of {@link FileSystemType }
     * 
     */
    public FileSystemType createFileSystemType() {
        return new FileSystemType();
    }

    /**
     * Create an instance of {@link FanType }
     * 
     */
    public FanType createFanType() {
        return new FanType();
    }

    /**
     * Create an instance of {@link NetworkNodeType }
     * 
     */
    public NetworkNodeType createNetworkNodeType() {
        return new NetworkNodeType();
    }

    /**
     * Create an instance of {@link RAIDType }
     * 
     */
    public RAIDType createRAIDType() {
        return new RAIDType();
    }

    /**
     * Create an instance of {@link OpticalFDDIType }
     * 
     */
    public OpticalFDDIType createOpticalFDDIType() {
        return new OpticalFDDIType();
    }

    /**
     * Create an instance of {@link CpuUsageType }
     * 
     */
    public CpuUsageType createCpuUsageType() {
        return new CpuUsageType();
    }

    /**
     * Create an instance of {@link NetworkPortType }
     * 
     */
    public NetworkPortType createNetworkPortType() {
        return new NetworkPortType();
    }

    /**
     * Create an instance of {@link RAMStickType }
     * 
     */
    public RAMStickType createRAMStickType() {
        return new RAMStickType();
    }

    /**
     * Create an instance of {@link SwitchFabricType }
     * 
     */
    public SwitchFabricType createSwitchFabricType() {
        return new SwitchFabricType();
    }

    /**
     * Create an instance of {@link VoltageType }
     * 
     */
    public VoltageType createVoltageType() {
        return new VoltageType();
    }

    /**
     * Create an instance of {@link NodeType }
     * 
     */
    public NodeType createNodeType() {
        return new NodeType();
    }

    /**
     * Create an instance of {@link PSULoadType }
     * 
     */
    public PSULoadType createPSULoadType() {
        return new PSULoadType();
    }

    /**
     * Create an instance of {@link CUEType }
     * 
     */
    public CUEType createCUEType() {
        return new CUEType();
    }

    /**
     * Create an instance of {@link DatacenterType }
     * 
     */
    public DatacenterType createDatacenterType() {
        return new DatacenterType();
    }

    /**
     * Create an instance of {@link PDUType }
     * 
     */
    public PDUType createPDUType() {
        return new PDUType();
    }

    /**
     * Create an instance of {@link WaterCoolerType }
     * 
     */
    public WaterCoolerType createWaterCoolerType() {
        return new WaterCoolerType();
    }

    /**
     * Create an instance of {@link PSUType }
     * 
     */
    public PSUType createPSUType() {
        return new PSUType();
    }

    /**
     * Create an instance of {@link VPNType }
     * 
     */
    public VPNType createVPNType() {
        return new VPNType();
    }

    /**
     * Create an instance of {@link NrOfNodesType }
     * 
     */
    public NrOfNodesType createNrOfNodesType() {
        return new NrOfNodesType();
    }

    /**
     * Create an instance of {@link StorageCapacityType }
     * 
     */
    public StorageCapacityType createStorageCapacityType() {
        return new StorageCapacityType();
    }

    /**
     * Create an instance of {@link MainboardType }
     * 
     */
    public MainboardType createMainboardType() {
        return new MainboardType();
    }

    /**
     * Create an instance of {@link SoftwareApplicationType }
     * 
     */
    public SoftwareApplicationType createSoftwareApplicationType() {
        return new SoftwareApplicationType();
    }

    /**
     * Create an instance of {@link NativeHypervisorType }
     * 
     */
    public NativeHypervisorType createNativeHypervisorType() {
        return new NativeHypervisorType();
    }

    /**
     * Create an instance of {@link RPMType }
     * 
     */
    public RPMType createRPMType() {
        return new RPMType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RackableSwitchType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "RackableSwitch")
    public JAXBElement<RackableSwitchType> createRackableSwitch(RackableSwitchType value) {
        return new JAXBElement<RackableSwitchType>(_RackableSwitch_QNAME, RackableSwitchType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RAMStickType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "RAMStick")
    public JAXBElement<RAMStickType> createRAMStick(RAMStickType value) {
        return new JAXBElement<RAMStickType>(_RAMStick_QNAME, RAMStickType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NICType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "FiberchannelNIC")
    public JAXBElement<NICType> createFiberchannelNIC(NICType value) {
        return new JAXBElement<NICType>(_FiberchannelNIC_QNAME, NICType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RackableRouterType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "RackableRouter")
    public JAXBElement<RackableRouterType> createRackableRouter(RackableRouterType value) {
        return new JAXBElement<RackableRouterType>(_RackableRouter_QNAME, RackableRouterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BladeServerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "BladeServer")
    public JAXBElement<BladeServerType> createBladeServer(BladeServerType value) {
        return new JAXBElement<BladeServerType>(_BladeServer_QNAME, BladeServerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TunnelType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "Tunnel")
    public JAXBElement<TunnelType> createTunnel(TunnelType value) {
        return new JAXBElement<TunnelType>(_Tunnel_QNAME, TunnelType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SerialPPPType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "SerialPPP")
    public JAXBElement<SerialPPPType> createSerialPPP(SerialPPPType value) {
        return new JAXBElement<SerialPPPType>(_SerialPPP_QNAME, SerialPPPType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link JobActionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "JobActions")
    public JAXBElement<JobActionsType> createJobActions(JobActionsType value) {
        return new JAXBElement<JobActionsType>(_JobActions_QNAME, JobActionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SoftwareNetworkType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "SoftwareNetwork")
    public JAXBElement<SoftwareNetworkType> createSoftwareNetwork(SoftwareNetworkType value) {
        return new JAXBElement<SoftwareNetworkType>(_SoftwareNetwork_QNAME, SoftwareNetworkType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VPNType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "VPN")
    public JAXBElement<VPNType> createVPN(VPNType value) {
        return new JAXBElement<VPNType>(_VPN_QNAME, VPNType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link QueueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "Queue")
    public JAXBElement<QueueType> createQueue(QueueType value) {
        return new JAXBElement<QueueType>(_Queue_QNAME, QueueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NASType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "NAS")
    public JAXBElement<NASType> createNAS(NASType value) {
        return new JAXBElement<NASType>(_NAS_QNAME, NASType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OperatingSystemType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "OperatingSystem")
    public JAXBElement<OperatingSystemType> createOperatingSystem(OperatingSystemType value) {
        return new JAXBElement<OperatingSystemType>(_OperatingSystem_QNAME, OperatingSystemType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SiteType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "Site")
    public JAXBElement<SiteType> createSite(SiteType value) {
        return new JAXBElement<SiteType>(_Site_QNAME, SiteType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ApplicationBenchmarkType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "ApplicationBenchmark")
    public JAXBElement<ApplicationBenchmarkType> createApplicationBenchmark(ApplicationBenchmarkType value) {
        return new JAXBElement<ApplicationBenchmarkType>(_ApplicationBenchmark_QNAME, ApplicationBenchmarkType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PSUType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "PSU")
    public JAXBElement<PSUType> createPSU(PSUType value) {
        return new JAXBElement<PSUType>(_PSU_QNAME, PSUType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NICType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "EthernetNIC")
    public JAXBElement<NICType> createEthernetNIC(NICType value) {
        return new JAXBElement<NICType>(_EthernetNIC_QNAME, NICType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CacheType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "Cache")
    public JAXBElement<CacheType> createCache(CacheType value) {
        return new JAXBElement<CacheType>(_Cache_QNAME, CacheType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NetworkNodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "NetworkNode")
    public JAXBElement<NetworkNodeType> createNetworkNode(NetworkNodeType value) {
        return new JAXBElement<NetworkNodeType>(_NetworkNode_QNAME, NetworkNodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FileSystemType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "FileSystem")
    public JAXBElement<FileSystemType> createFileSystem(FileSystemType value) {
        return new JAXBElement<FileSystemType>(_FileSystem_QNAME, FileSystemType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RackType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "Rack")
    public JAXBElement<RackType> createRack(RackType value) {
        return new JAXBElement<RackType>(_Rack_QNAME, RackType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ServerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "Server")
    public JAXBElement<ServerType> createServer(ServerType value) {
        return new JAXBElement<ServerType>(_Server_QNAME, ServerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StorageUnitType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "StorageUnit")
    public JAXBElement<StorageUnitType> createStorageUnit(StorageUnitType value) {
        return new JAXBElement<StorageUnitType>(_StorageUnit_QNAME, StorageUnitType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ControllerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "Controller")
    public JAXBElement<ControllerType> createController(ControllerType value) {
        return new JAXBElement<ControllerType>(_Controller_QNAME, ControllerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HostedHypervisorType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "HostedHypervisor")
    public JAXBElement<HostedHypervisorType> createHostedHypervisor(HostedHypervisorType value) {
        return new JAXBElement<HostedHypervisorType>(_HostedHypervisor_QNAME, HostedHypervisorType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NodeActionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "NodeActions")
    public JAXBElement<NodeActionsType> createNodeActions(NodeActionsType value) {
        return new JAXBElement<NodeActionsType>(_NodeActions_QNAME, NodeActionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogicalUnitType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "LogicalUnit")
    public JAXBElement<LogicalUnitType> createLogicalUnit(LogicalUnitType value) {
        return new JAXBElement<LogicalUnitType>(_LogicalUnit_QNAME, LogicalUnitType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NodeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "Node")
    public JAXBElement<NodeType> createNode(NodeType value) {
        return new JAXBElement<NodeType>(_Node_QNAME, NodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RAIDDiskType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "RAIDDisk")
    public JAXBElement<RAIDDiskType> createRAIDDisk(RAIDDiskType value) {
        return new JAXBElement<RAIDDiskType>(_RAIDDisk_QNAME, RAIDDiskType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BoxRouterType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "BoxRouter")
    public JAXBElement<BoxRouterType> createBoxRouter(BoxRouterType value) {
        return new JAXBElement<BoxRouterType>(_BoxRouter_QNAME, BoxRouterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FIT4GreenType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "FIT4Green")
    public JAXBElement<FIT4GreenType> createFIT4Green(FIT4GreenType value) {
        return new JAXBElement<FIT4GreenType>(_FIT4Green_QNAME, FIT4GreenType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EnclosureType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "Enclosure")
    public JAXBElement<EnclosureType> createEnclosure(EnclosureType value) {
        return new JAXBElement<EnclosureType>(_Enclosure_QNAME, EnclosureType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EthernetType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "Ethernet")
    public JAXBElement<EthernetType> createEthernet(EthernetType value) {
        return new JAXBElement<EthernetType>(_Ethernet_QNAME, EthernetType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BoxSwitchType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "BoxSwitch")
    public JAXBElement<BoxSwitchType> createBoxSwitch(BoxSwitchType value) {
        return new JAXBElement<BoxSwitchType>(_BoxSwitch_QNAME, BoxSwitchType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SolidStateDiskType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "SolidStateDisk")
    public JAXBElement<SolidStateDiskType> createSolidStateDisk(SolidStateDiskType value) {
        return new JAXBElement<SolidStateDiskType>(_SolidStateDisk_QNAME, SolidStateDiskType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FlowType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "Flow")
    public JAXBElement<FlowType> createFlow(FlowType value) {
        return new JAXBElement<FlowType>(_Flow_QNAME, FlowType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NativeOperatingSystemType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "NativeOperatingSystem")
    public JAXBElement<NativeOperatingSystemType> createNativeOperatingSystem(NativeOperatingSystemType value) {
        return new JAXBElement<NativeOperatingSystemType>(_NativeOperatingSystem_QNAME, NativeOperatingSystemType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LUNType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "LUN")
    public JAXBElement<LUNType> createLUN(LUNType value) {
        return new JAXBElement<LUNType>(_LUN_QNAME, LUNType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SoftwareApplicationType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "SoftwareApplication")
    public JAXBElement<SoftwareApplicationType> createSoftwareApplication(SoftwareApplicationType value) {
        return new JAXBElement<SoftwareApplicationType>(_SoftwareApplication_QNAME, SoftwareApplicationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SoftwareRAIDType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "SoftwareRAID")
    public JAXBElement<SoftwareRAIDType> createSoftwareRAID(SoftwareRAIDType value) {
        return new JAXBElement<SoftwareRAIDType>(_SoftwareRAID_QNAME, SoftwareRAIDType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OpticalFDDIType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "OpticalFDDI")
    public JAXBElement<OpticalFDDIType> createOpticalFDDI(OpticalFDDIType value) {
        return new JAXBElement<OpticalFDDIType>(_OpticalFDDI_QNAME, OpticalFDDIType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CPUType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "CPU")
    public JAXBElement<CPUType> createCPU(CPUType value) {
        return new JAXBElement<CPUType>(_CPU_QNAME, CPUType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VirtualMachineType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "VirtualMachine")
    public JAXBElement<VirtualMachineType> createVirtualMachine(VirtualMachineType value) {
        return new JAXBElement<VirtualMachineType>(_VirtualMachine_QNAME, VirtualMachineType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HostedOperatingSystemType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "HostedOperatingSystem")
    public JAXBElement<HostedOperatingSystemType> createHostedOperatingSystem(HostedOperatingSystemType value) {
        return new JAXBElement<HostedOperatingSystemType>(_HostedOperatingSystem_QNAME, HostedOperatingSystemType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HardDiskType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "HardDisk")
    public JAXBElement<HardDiskType> createHardDisk(HardDiskType value) {
        return new JAXBElement<HardDiskType>(_HardDisk_QNAME, HardDiskType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SANType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "SAN")
    public JAXBElement<SANType> createSAN(SANType value) {
        return new JAXBElement<SANType>(_SAN_QNAME, SANType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link E80211XType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "e80211x")
    public JAXBElement<E80211XType> createE80211X(E80211XType value) {
        return new JAXBElement<E80211XType>(_E80211X_QNAME, E80211XType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DatacenterType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "Datacenter")
    public JAXBElement<DatacenterType> createDatacenter(DatacenterType value) {
        return new JAXBElement<DatacenterType>(_Datacenter_QNAME, DatacenterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NativeHypervisorType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "NativeHypervisor")
    public JAXBElement<NativeHypervisorType> createNativeHypervisor(NativeHypervisorType value) {
        return new JAXBElement<NativeHypervisorType>(_NativeHypervisor_QNAME, NativeHypervisorType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PDUType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "PDU")
    public JAXBElement<PDUType> createPDU(PDUType value) {
        return new JAXBElement<PDUType>(_PDU_QNAME, PDUType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TowerServerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "TowerServer")
    public JAXBElement<TowerServerType> createTowerServer(TowerServerType value) {
        return new JAXBElement<TowerServerType>(_TowerServer_QNAME, TowerServerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogicalVolumeType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "LogicalVolume")
    public JAXBElement<LogicalVolumeType> createLogicalVolume(LogicalVolumeType value) {
        return new JAXBElement<LogicalVolumeType>(_LogicalVolume_QNAME, LogicalVolumeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RackableServerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "RackableServer")
    public JAXBElement<RackableServerType> createRackableServer(RackableServerType value) {
        return new JAXBElement<RackableServerType>(_RackableServer_QNAME, RackableServerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NetworkLoadType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "NetworkLoad")
    public JAXBElement<NetworkLoadType> createNetworkLoad(NetworkLoadType value) {
        return new JAXBElement<NetworkLoadType>(_NetworkLoad_QNAME, NetworkLoadType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NetworkPortType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "NetworkPort")
    public JAXBElement<NetworkPortType> createNetworkPort(NetworkPortType value) {
        return new JAXBElement<NetworkPortType>(_NetworkPort_QNAME, NetworkPortType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WaterCoolerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "WaterCooler")
    public JAXBElement<WaterCoolerType> createWaterCooler(WaterCoolerType value) {
        return new JAXBElement<WaterCoolerType>(_WaterCooler_QNAME, WaterCoolerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CoreType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "Core")
    public JAXBElement<CoreType> createCore(CoreType value) {
        return new JAXBElement<CoreType>(_Core_QNAME, CoreType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FrameworkCapabilitiesType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "FrameworkCapabilities")
    public JAXBElement<FrameworkCapabilitiesType> createFrameworkCapabilities(FrameworkCapabilitiesType value) {
        return new JAXBElement<FrameworkCapabilitiesType>(_FrameworkCapabilities_QNAME, FrameworkCapabilitiesType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FanType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "Fan")
    public JAXBElement<FanType> createFan(FanType value) {
        return new JAXBElement<FanType>(_Fan_QNAME, FanType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VMActionsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "VMActions")
    public JAXBElement<VMActionsType> createVMActions(VMActionsType value) {
        return new JAXBElement<VMActionsType>(_VMActions_QNAME, VMActionsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ATMType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "ATM")
    public JAXBElement<ATMType> createATM(ATMType value) {
        return new JAXBElement<ATMType>(_ATM_QNAME, ATMType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MainboardType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "Mainboard")
    public JAXBElement<MainboardType> createMainboard(MainboardType value) {
        return new JAXBElement<MainboardType>(_Mainboard_QNAME, MainboardType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LinkType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "Link")
    public JAXBElement<LinkType> createLink(LinkType value) {
        return new JAXBElement<LinkType>(_Link_QNAME, LinkType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RAIDType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "RAID")
    public JAXBElement<RAIDType> createRAID(RAIDType value) {
        return new JAXBElement<RAIDType>(_RAID_QNAME, RAIDType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link JobType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "Job")
    public JAXBElement<JobType> createJob(JobType value) {
        return new JAXBElement<JobType>(_Job_QNAME, JobType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HardwareRAIDType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "HardwareRAID")
    public JAXBElement<HardwareRAIDType> createHardwareRAID(HardwareRAIDType value) {
        return new JAXBElement<HardwareRAIDType>(_HardwareRAID_QNAME, HardwareRAIDType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RoleType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "Role")
    public JAXBElement<RoleType> createRole(RoleType value) {
        return new JAXBElement<RoleType>(_Role_QNAME, RoleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ClusterManagementType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "ClusterManagement")
    public JAXBElement<ClusterManagementType> createClusterManagement(ClusterManagementType value) {
        return new JAXBElement<ClusterManagementType>(_ClusterManagement_QNAME, ClusterManagementType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GPUType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "java/MetaModel", name = "GPU")
    public JAXBElement<GPUType> createGPU(GPUType value) {
        return new JAXBElement<GPUType>(_GPU_QNAME, GPUType.class, null, value);
    }

}
